{"version":3,"sources":["style/theme.js","actions/todoPosts.js","containers/LoginPage/styled.js","containers/LoginPage/index.js","containers/ListsPosts/styled.js","containers/ListsPosts/index.js","containers/FeedDetails/styled.js","containers/FeedDetails/index.js","containers/SignupPage/styled.js","containers/SignupPage/index.js","containers/Router/index.js","auth.js","reducers/todo.js","reducers/index.js","containers/App/index.js","index.js"],"names":["createMuiTheme","palette","primary","purple","setAllPosts","posts","type","payload","postDetails","comments","getPostId","id","baseURL","getPosts","dispatch","setState","a","token","localStorage","getItem","axios","get","headers","auth","response","data","alert","addPost","title","text","body","post","votePost","direction","put","voteComment","postId","commentId","getPostDetails","createComment","setItem","push","routes","details","redirectSignup","signup","username","email","password","login","WrapperLogin","styled","div","LoginPage","state","handleFieldChange","event","target","name","value","handleLogin","preventDefault","props","this","onSubmit","onChange","label","required","onClick","Component","connect","bindActionCreators","todoActions","WrapperPosts","ListsPosts","handleInputChange","handleSubmitForm","inputTitleValue","inputPostValue","handleSubmitId","handleLike","handleDislike","thumbs","placeholder","map","key","userVoteDirection","class","votesCount","commentsCount","todo","postInfo","WrapperDetails","FeedDetails","inputCommentValue","onChangeInputComment","onClickButton","comment","WrapperSignup","SignupPage","userName","handleSignUp","PrivateRoute","component","rest","render","to","pathname","from","location","root","Router","history","exact","path","action","createBrowserHistory","middlewares","applyMiddleware","routerMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","combineReducers","router","connectRouter","compose","App","theme","CssBaseline","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.82639ad9.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\nimport purple from \"@material-ui/core/colors/purple\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: purple\n  }\n});","import axios from \"axios\"\nimport { push} from \"connected-react-router\";\nimport { routes } from \"../containers/Router\"\n\n\nexport function setAllPosts (posts) {\n    return {\n        type:\"SET_ALL_POSTS\",\n        payload: {\n            posts\n        }\n    }\n\n}\n\n\nexport function postDetails (comments) {\n    return {\n        type:\"POST_DETAILS\",\n        payload: {\n            comments\n        }\n    }\n\n}\n\n\nexport const getPostId = (id) => {\n    return {\n        type: 'GET_POST_ID',\n        payload: {\n            id\n        }\n    }\n}\n\n\n const baseURL = (\"https://us-central1-future-apis.cloudfunctions.net/fourEddit\")\n\n\n\nexport const getPosts=()=> async(dispatch,setState)=> {\n    \n    try {\n        const token = localStorage.getItem(\"token\")\n    const response = await axios.get(`${baseURL}/posts`,{\n        headers:{\n            auth:token\n        }\n    })\n  \n    dispatch(setAllPosts(response.data.posts))\n    }catch {\n    alert(\"Ocorreu um erro inesperado. Tente novamente.\")\n}\n\n}\n\n\nexport const addPost=(title, text)=> async (dispatch, setState)=> {\n    const token = localStorage.getItem(\"token\")\n    const body = {\n        title:title,\n        text:text\n    }\n    try {\n        const response = await axios.post(`${baseURL}/posts`, body,{\n            headers: {\n                auth:token\n            }\n        })\n        \n        dispatch(getPosts())\n    }catch {\n       alert(\"Erro ao adicionar seu post. Tente novamente\")\n    }\n}\n\n\n\nexport const votePost =(direction, id)=>async (dispatch, setState) => {\n    const token = localStorage.getItem(\"token\")\n    const body = {\n        direction\n\n    }\n    try{\n        await axios.put(`${baseURL}/posts/${id}/vote`, body, {\n            headers: {\n                auth: token\n            }\n        })\n        \n    }catch (error){\n        alert(\"Ocorreu um erro inesperado. Tente novamente\")\n\n    }\n}\n\n\n\nexport const voteComment = (direction, postId, commentId)=>async (dispatch, setState) => {\n    const token = localStorage.getItem(\"token\")\n    const body = {\n        direction\n\n    }\n    try{\n        await axios.put(`${baseURL}/posts/${postId}/comment/${commentId}/vote`, body, {\n            headers: {\n                auth: token\n            }\n        \n        }) \n        dispatch(getPostDetails(postId, token))\n\n        }catch (error){\n        alert(\"Ocorreu um erro inesperado. Tente novamente\")\n\n\n    }\n\n}\n\n\nexport const createComment =(id, text)=> async (dispatch, setState)=> {\n    const token = localStorage.getItem(\"token\")\n    const body = {\n        text:text\n    }\n    try {\n        const response =  await axios.post(`${baseURL}/posts/${id}/comment`, body,{\n            headers: {\n                auth:token\n            }\n        })\n        \n        dispatch(getPostDetails(id, token))\n    }catch{\n        alert(\"Ocorreu um erro inesperado. Tente novamente.\")\n       \n    }\n}\n\n\nexport const getPostDetails = (id, token) => async (dispatch, setState) => {\n    \n    try {\n        const response = await axios.get(\n\n        `${baseURL}/posts/${id}`,\n        {\n          headers: {\n            auth: token,\n          },\n        }\n      );\n\n      localStorage.setItem(\"postId\", id)\n\n      dispatch(postDetails (response.data.post));\n      dispatch(push(routes.details))\n\n    }catch {\n\n        alert(\"Ocorreu um erro inesperado. Atualize seu navegador.\")\n        \n    }\n    \n}\nexport const redirectSignup = ()=> async(dispatch, setState)=> {\n    dispatch(push(routes.signup))\n}\n\n\nexport const signup = (username, email, password) => async (dispatch, setState) => {\n    const body = {\n        username: username,\n        email: email,\n        password: password\n    };\n\n    try {\n        const response = await axios.post(`${baseURL}/signup`, body);\n\n        localStorage.setItem(\"token\", response.data.token);\n        dispatch(push(routes.posts))\n\n    } catch {\n        alert(\"Ocorreu um erro inesperado. Tente novamente.\")\n    }\n}\n\n\nexport const login = (email, password) => async (dispatch, setState) => {\n    const body = {\n        email: email,\n        password: password\n    };\n\n    try {\n        const response = await axios.post(`${baseURL}/login`, body);\n\n        localStorage.setItem(\"token\", response.data.token);\n        dispatch(push(routes.posts))\n\n    } catch (error) {\n        alert(\"Erro no login, tente novamente!\")\n        \n    }\n}","import styled from 'styled-components'\n\n\nexport const WrapperLogin = styled.div`\n\ndisplay:flex;\njustify-content:center;\nalign-items:center;\nmargin-top:20%;\nflex-direction:column;\n\nform{\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n\n    input {\n        padding:5px 10px;\n        border-radius:5px;\n    }\n\n    input, button {\n        margin:5px auto;\n        border:none\n    }\n    \n    button {\n        background-color: #6200ee;\n        color:white;\n        padding:5px 10px;\n        border-radius:10px;\n        width: 80px;\n    }\n\n\n}\n\nbutton {\n        background-color:lightgray;\n        color:black;\n        padding:5px 10px;\n        border-radius:10px;\n        width: 80px;\n        margin:5px 0;\n        border:none;\n        \n    }\n\n`\n\n","import React, { Component } from \"react\";\nimport { connect} from \"react-redux\"\nimport { bindActionCreators, dispatch } from 'redux'\nimport * as todoActions from \"../../actions/todoPosts\"\nimport {WrapperLogin} from \"./styled\"\nimport { push} from \"connected-react-router\";\nimport { routes } from \"../Router/index\"\n\n\n\n\nclass LoginPage extends Component {\n\n  state = {\n\n    email: \"\",\n    password: \"\"\n\n  }\n\n  handleFieldChange = (event) => {\n\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n\n  handleLogin = (event) => {\n    event.preventDefault();\n\n    this.props.login(this.state.email, this.state.password);\n  }\n\n\n\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n        <WrapperLogin>\n\n    <form onSubmit={this.handleLogin}>\n      \n          <input\n            onChange={this.handleFieldChange}\n            name=\"email\"\n            type=\"email\"\n            label=\"E-mail\"\n            value={email}\n            required\n          />\n\n          <input\n            onChange={this.handleFieldChange}\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            value={password}\n            required\n          />\n\n         \n            <button\n            type=\"submit\"\n            >Entrar\n            </button>\n\n          \n      </form>\n             <button\n                type=\"submit\"\n                onClick={this.props.redirectSignup}\n              >Cadastrar\n              </button>\n\n      \n        </WrapperLogin>\n    )}\n  }\n\n\n\nconst mapDispatchToProps = dispatch => \n  bindActionCreators(todoActions, dispatch)\n \n\nexport default connect(null, mapDispatchToProps)(LoginPage)\n\n","import styled from 'styled-components'\n\n\nexport const WrapperPosts = styled.div `\ndisplay:flex;\nflex-direction:column;\njustify-content:center;\nalign-items:center;\ntext-align:center;\n\n\nform {\n    background-color: #311b92;\n    text-align:center;\n    width:500px;\n    height:115px;\n    border-radius:10px;\n    padding-top:15px;\n\n    input {\n        padding:5px 10px;\n        border-radius:5px;\n    }\n\n    input, button {\n        margin:5px auto;\n        border:none;\n        display:block;\n    }\n    button {\n        margin:5px auto;\n        background-color: #6200ee;\n        color:white;\n        padding:5px 10px;\n        border-radius:10px;\n        width: 80px;\n    }\n    \n   \n}\nul {\n        list-style-type:none;\n        margin:0;\n        padding:0;\n        \n        li {\n            cursor: pointer;\n            border-radius:10px;\n            margin:10px 0;\n            background-color:#ede7f6;\n            width:500px;\n            height:100%;\n            padding:10px; \n            \n            button {\n                outline:none;\n                background-color: transparent;\n                padding:5px 10px;\n                border:none;\n                width: 80px;\n             \n            }\n   \n\n            div {\n                display:flex;\n                justify-content:space-evenly;\n\n                p {\n                    i {\n                        margin:0 7px\n                    }\n                }\n            }\n        }\n\n    }\n\n`","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport * as todoActions from \"../../actions/todoPosts\"\nimport { WrapperPosts } from \"./styled\";\n\n\n\nclass ListsPosts extends Component {\n    constructor(props) {\n        // console.log(props)\n        super(props)\n        this.state = {\n            inputPostValue: \"\",\n            inputTitleValue:\"\",\n            thumbs:false\n\n        }\n\n    }\n\n    componentDidMount() {\n   \n    this.props.getPosts()\n    \n    }\n\n\n\n    handleInputChange = (event) => {\n        const {value, name}=event.target\n        this.setState({ [name]:value })\n        // console.log(this.state.inputPostValue)\n    }\n\n    handleSubmitForm = (event) => {\n\n        event.preventDefault()\n        this.props.addPost(this.state.inputTitleValue, this.state.inputPostValue)\n        this.setState({ inputPostValue: \"\", inputTitleValue:\"\" })\n       \n\n    }\n\n    handleSubmitId =(id)=> {\n       \n        this.props.getPostDetails(id, localStorage.getItem(\"token\"))\n    }\n\n\n    handleLike = (id, direction)=> {\n\n        if (direction === 0 || direction === -1) {\n            this.props.votePost(1, id)\n        } else {\n            this.props.votePost(0, id)\n        }\n    }\n\n    handleDislike = (id, direction)=> {\n\n        if (direction === 0 || direction === 1) {\n            this.props.votePost(-1, id)\n        } else {\n            this.props.votePost(0, id)\n        }\n    }\n\n\n    render() {\n       \n        return (\n\n    <WrapperPosts>\n\n                <h1>Página de Feed</h1>\n        \n            <form onSubmit={this.handleSubmitForm}>\n                \n                <input\n                required\n                onChange={this.handleInputChange}\n                type=\"text\"\n                name=\"inputPostValue\"\n                value={this.inputPostValue}\n                placeholder=\"O que você está pensando?\"\n                />\n\n                <input\n                required\n                onChange={this.handleInputChange}\n                name=\"inputTitleValue\"\n                type=\"text\"\n                value={this.inputTitleValue}\n                placeholder=\"Título do post\"\n                 />\n\n                <button\n                type=\"submit\">\n                   Publicar\n                 </button>\n\n            </form>\n\n                <ul>\n                    {this.props.posts && this.props.posts.map(post => {\n\n                        return (\n                \n                <li  key={post.id}\n                        onClick={()=>this.handleSubmitId(post.id)}>\n                        <strong>{post.username}</strong>\n                        <br/>\n                        <em>{post.title}</em>\n                        <p>{post.text}</p>\n\n                        <div>\n\n                            <div>\n                                  <button onClick={()=>this.handleDislike(post.id, post.userVoteDirection)} ><i class=\"fas fa-long-arrow-alt-down\"></i></button>\n\n                                    <p> \n                                        {post.votesCount}\n                                    </p>\n\n                                    <button onClick={()=>this.handleLike(post.id, post.userVoteDirection)}  ><i class=\"fas fa-long-arrow-alt-up\"></i></button>\n                            </div>\n                            \n                            <p>{post.commentsCount} comentários</p> \n\n                        </div>   \n\n                </li>)\n\n                    })}\n                  \n                </ul>\n\n        </WrapperPosts>\n        \n        )\n    }\n\n}\nconst mapStateToProps = state => ({\n    posts: state.todo.posts,\n    postId: state.todo.postInfo\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(todoActions, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListsPosts)","import styled from 'styled-components'\n\n\nexport const WrapperDetails = styled.div `\ndisplay:flex;\nflex-direction:column;\njustify-content:center;\nalign-items:center;\ntext-align:center;\nmargin-top:20px;\n\nsection {\n    input {\n        padding:5px 10px;\n        border-radius:5px;\n        width:410px;\n        outline:none;\n    }\n\n    input, button {\n        margin:5px auto;\n        border:none\n        \n    }\n    \n    button {\n        background-color: #6200ee;\n        color:white;\n        padding:5px 10px;\n        margin-left:5px;\n        border-radius:10px;\n        width: 80px;\n    }\n\n}\n\n\n> div {\n    background-color:#311b92;\n    color:white;\n    text-align:center;\n    width:500px;\n    height:100%;\n    border-radius:10px;\n    padding-top:15px;\n\n    > div {\n        display:flex;\n        justify-content:space-evenly;\n        > div {\n            display:flex;\n            justify-content:space-evenly;\n            button {\n                outline:none;\n                background-color: transparent;\n                padding:5px 10px;\n                border:none;\n                width: 80px;\n                color:white;\n             \n            }\n        }\n    } \n   \n}\n\nbutton {\n    display:inline;\n}\n\n\n        main {\n            cursor: pointer;\n            border-radius:10px;\n            margin:10px 0;\n            background-color:#ede7f6;\n            width:500px;\n            height:100%;\n            padding:10px;\n\n           div {\n            display:flex;\n            justify-content:space-evenly; \n            > div {\n            button {\n                outline:none;\n                background-color: transparent;\n                padding:5px 10px;\n                border:none;\n                width: 80px;\n             \n            }\n   \n        }\n\n           } \n\n           \n        }\n\n\n`","import React,  {Component} from 'react'\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport * as todoActions from \"../../actions/todoPosts\"\nimport {WrapperDetails} from \"./styled\"\n\n\n\nclass FeedDetails extends Component{\n\n    state = {\n\n        inputCommentValue:\"\"\n    }\n\n\n    onChangeInputComment =(event)=>{\n\n        this.setState({inputCommentValue:event.target.value})\n    }\n\n    onClickButton =(id)=> {\n        this.props.createComment(id, this.state.inputCommentValue)\n    }\n\n    handleLike = (direction, postId, commentId)=> {\n\n        if (direction === 0 || direction === -1) {\n            this.props.voteComment(1,postId, commentId)\n        } else {\n            this.props.voteComment(0,postId, commentId)\n        }\n    }\n\n    handleDislike = (direction, postId, commentId)=> {\n\n        if (direction === 0 || direction === 1) {\n            this.props.voteComment(-1, postId,commentId)\n        } else {\n            this.props.voteComment(0, postId, commentId)\n        }\n       \n    }\n\n    render (){\n      \n    return( \n\n        <WrapperDetails>\n            \n            <div>\n\n                <strong>{this.props.postInfo.username}</strong>\n\n                <p>{this.props.postInfo.title}</p>\n                <p>{this.props.postInfo.text}</p>\n\n                <div>\n\n                    <div>\n                            <button \n                       \n                            ><i class=\"fas fa-long-arrow-alt-down\"></i></button>\n                            <p> \n                            {this.props.postInfo.votesCount}\n                            </p>\n                            <button ><i class=\"fas fa-long-arrow-alt-up\"></i></button>\n                    </div>\n\n                    <p>{this.props.postInfo.commentsCount} comentarios </p>\n                </div>\n\n            </div>\n\n            <section>\n\n                <input onChange={this.onChangeInputComment}  \n                value={this.state.inputCommentValue} \n                \n                placeholder=\"seu comentario\"/>\n                <button\n                >Comentar\n                </button>\n\n            </section>\n          \n\n           {this.props.postInfo.comments && this.props.postInfo.comments.map(comment=>{\n               return (\n                  \n                  <main key={comment.id}>\n\n                       <strong>{comment.username}</strong>\n                       <p>{comment.text}</p>\n                       \n                        <div>\n                            <div>\n                            <button\n                                onClick={()=>this.handleDislike(this.props.postInfo.userVoteDirection, this.props.postInfo.id, comment.id)}\n                            ><i class=\"fas fa-long-arrow-alt-down\"></i></button>\n                            <p> \n                                {comment.votesCount}\n                            </p>\n                            <button \n                              onClick={()=>this.handleLike(this.props.postInfo.userVoteDirection, this.props.postInfo.id, comment.id)}\n                            \n                            ><i class=\"fas fa-long-arrow-alt-up\"></i></button>\n                            </div>\n\n                         </div>\n                   </main>\n\n                )\n            }\n            )}\n\n        </WrapperDetails>\n        \n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    posts: state.todo.posts,\n    postInfo: state.todo.postInfo\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(todoActions, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedDetails)\n","import styled from 'styled-components'\n\n\nexport const WrapperSignup = styled.div`\n\ndisplay:flex;\njustify-content:center;\nalign-items:center;\nmargin-top:15%;\nflex-direction:column;\n\nform {\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n\n    input {\n        margin-bottom:10px;\n        padding:5px 10px;\n        border-radius:5px;\n    }\n\n    input, button {\n        border:none\n    }\n\n    label {\n        margin:10px;\n    }\n    \n    button {\n        margin:5px auto;\n        background-color: #6200ee;\n        color:white;\n        padding:5px 10px;\n        border-radius:10px;\n        width: 80px;\n    }\n}\n\n`\n\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport * as todoActions from \"../../actions/todoPosts\"\nimport { WrapperSignup } from \"./styled\"\n\n\n\nclass SignupPage extends Component {\n\n    state = {\n\n    userName:\"\",\n    email: \"\",\n    password: \"\"\n  \n    }\n  \n    handleFieldChange = (event) => {\n  \n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n  \n  \n    handleSignUp = (event) => {\n      event.preventDefault();\n  \n      this.props.signup(this.state.userName, this.state.email, this.state.password);\n      }\n  \n  \n  \n    render() {\n      const { email, password, userName } = this.state;\n  \n      return (\n\n        <WrapperSignup>\n          <form onSubmit={this.handleSignUp}>\n              \n              <label>Nome: </label>\n              <input \n              onChange={this.handleFieldChange}\n              name=\"userName\"\n              type=\"text\"\n              label=\"Nome\"\n              value={userName}\n              required\n              placeholder=\"Insira seu nome\"\n\n              />\n\n            <label>E-mail: </label>\n            <input\n              onChange={this.handleFieldChange}\n              name=\"email\"\n              type=\"email\"\n              label=\"E-mail\"\n              value={email}\n              required\n              placeholder=\"Insira seu email\"\n            />\n\n            <label>Senha: </label>\n            <input\n              onChange={this.handleFieldChange}\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              value={password}\n              placeholder=\"Insira sua senha\"\n              required\n            />\n            \n                <button\n                  type=\"submit\"\n                >Cadastrar\n                </button>\n        \n                </form>\n        </WrapperSignup>\n\n      )}\n    }\n\n\n\nconst mapDispatchToProps = dispatch =>\nbindActionCreators(todoActions, dispatch)\n  \nexport default connect(null, mapDispatchToProps) (SignupPage)","import React from \"react\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport LoginPage from \"../LoginPage\";\nimport ListsPosts from \"../ListsPosts\";\nimport FeedDetails from \"../FeedDetails\"\nimport SignupPage from \"../SignupPage\";\nimport {isAuthenticated} from \"../../auth\"\n\n\n\nconst PrivateRoute =({component:Component,...rest})=> (\n  <Route {...rest} \n  render={ props =>\n    isAuthenticated() ? (\n    <Component {...props}/>\n\n  ): (\n    <Redirect to ={{pathname:\"/\", state:{from:props.location}}}/>\n  )\n}/>\n\n)\n\n\n\nexport const routes = {\n  root: \"/\",\n  posts:\"/posts\",\n  details:\"/posts/details\",\n  signup:\"/signup\"\n  // Outras rotas aqui\n};\n\nfunction Router(props) {\n  return (\n    <ConnectedRouter history={props.history}>\n      <Switch>\n        <PrivateRoute exact path={routes.details} component={FeedDetails}/>\n        <Route exact path={routes.root} component={LoginPage} />\n        <Route exact path={routes.signup} component={SignupPage}/>\n        <PrivateRoute exact path={routes.posts} component={ListsPosts}/>\n      </Switch>\n    </ConnectedRouter>\n  );\n}\n\nexport default Router;\n","\n\nexport const isAuthenticated =()=>{\n  return localStorage.getItem(\"token\") ? true : false \n}","\n\nexport default function todo(state = [], action) {\n    switch (action.type) {\n      \n        case \"SET_ALL_POSTS\":\n            return { ...state, posts: action.payload.posts }\n\n        case \"POST_DETAILS\":\n            return { ...state, postInfo: action.payload.comments }\n\n        case \"GET_POST_ID\":\n            return {...state, postId: action.payload.id}    \n\n        default:\n            return state\n    }\n\n\n}","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport  todo from './todo'\nexport const generateReducers = history =>\n  combineReducers({\n    router: connectRouter(history),\n    todo\n    \n  });\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport theme from \"../../style/theme\";\nimport Router from \"../Router\";\nimport { createBrowserHistory } from \"history\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { generateReducers } from \"../../reducers\";\nimport { routerMiddleware } from \"connected-react-router\";\n\n\nexport const history = createBrowserHistory();\n\nconst middlewares = [\n  applyMiddleware(routerMiddleware(history), thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\n    : f => f\n];\n\nconst store = createStore(generateReducers(history), compose(...middlewares));\n\nexport const App = () => (\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router history={history} />\n    </MuiThemeProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}